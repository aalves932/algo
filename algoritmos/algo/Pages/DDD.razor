@page "/ddd"
@using System.Net.Http.Json
@using System.Text.Json.Serialization;
@inject HttpClient Http


<div class="max-w-5xl mx-auto">

    <h3 class="text-3xl font-bold">Consulta localidades por DDD</h3>

    <div class="max-w-xl mx-auto rounded-lg shadow-xl mt-4 pt-3 pb-3 bg-gradient-card-dark">
        <div class=" grid grid-cols-1 gap-1 text-center justify-items-center"> @* Container dos inputs **@
            <p>DDD</p>
            <input @bind="dddInput" type="text" placeholder="Digite o DDD" class="form-control max-w-32 text-center" />
            <button class="mt-2 border-2 hover:bg-slate-100 hover:text-slate-900 py-2 px-3 rounded-lg"
                @onclick="ConsultarDdd">Consultar</button>
        </div>
    </div>

    @if (resultadoDdd != null)
    {
        @if (resultadoDdd.Uf != null)
        {
            <div class="max-w-4xl mx-auto mt-4 pt-3 pb-3">

                <div class="grid sm:grid-cols-2 gap-2 items-center" style="text-align: left">
                    <div class="text-lg">
                        <p> @resultadoDdd.Cities.Count Cidades com DDD @dddInput </p>
                    </div>
                    <input @bind="filtroCidade" @oninput="OnFiltroCidadeChanged" type="text" placeholder="Filtrar cidade"
                        class="form-control  text-center " />
                </div>


                <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-4 justify-content-center mt-5">
                    @foreach (var cidade in resultadoDdd.Cities.OrderBy(cidade => cidade).ToList().Where(cidade => string.IsNullOrEmpty(filtroCidade) ||
                   cidade.ToLower().Contains(filtroCidade.ToLower())))
                    {
                        <div class="border-2 shadow-xl hover:bg-slate-100 hover:text-slate-900 py-3 px-3 rounded-lg text-sm text-center">
                            @cidade
                        </div>
                    }
                </div>
            </div>
            @if (!string.IsNullOrWhiteSpace(filtroCidade))
            {
                <p>
                    @resultadoDdd.Cities.Where(cidade => string.IsNullOrEmpty(filtroCidade) ||
                             cidade.ToLower().Contains(filtroCidade.ToLower())).Count()
                    cidades filtradas
                </p>
            }

        }
        else
        {
            <div class="max-w-4xl mx-auto mt-4 pt-3 pb-3 text-lg text-red-700 text-center">Não foram encontradas cidades para o
                DDD informado!!!</div>
        }

    }
</div>


@code {
    public class DddResult
    {
        [JsonPropertyName("state")]
        public string? Uf { get; set; }

        [JsonPropertyName("cities")]
        public List<string> Cities { get; set; } = new List<string>(); // Garante que Cities nunca será nulo
    
    }
    private string dddInput= string.Empty;
    private DddResult? resultadoDdd;
    private string? filtroCidade = string.Empty;


    private void OnFiltroCidadeChanged(ChangeEventArgs e)
    {
        filtroCidade = e.Value?.ToString();
    }

    private async Task ConsultarDdd()
    {
        filtroCidade = "";

        if (!string.IsNullOrWhiteSpace(dddInput))
        {
            var url = $"https://brasilapi.com.br/api/ddd/v1/{dddInput}";
            try
            {
                resultadoDdd = await Http.GetFromJsonAsync<DddResult>(url);

                // Verifica se a resposta não é nula e contém cidades
                if (resultadoDdd?.Cities == null || !resultadoDdd.Cities.Any())
                {
                    resultadoDdd = new DddResult { Cities = new List<string> { "Nenhuma cidade encontrada para o DDD informado." } };
                }
            }
            catch (HttpRequestException ex) when (ex.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                // Trata o caso em que o DDD não é encontrado (404)
                resultadoDdd = new DddResult { Cities = new List<string> { "DDD não encontrado." } };
            }
            catch (Exception ex)
            {
                // Trata outros tipos de exceções que podem ocorrer
                Console.WriteLine($"Erro ao consultar o DDD: {ex.Message}");
                // Aqui você pode definir um feedback para o usuário, dependendo da sua UI
                resultadoDdd = new DddResult { Cities = new List<string> { "Erro ao consultar o DDD." } };
            }
        }
        StateHasChanged();
    }
}
